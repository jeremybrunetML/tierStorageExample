buildscript {	
  repositories {
			println "Using online buildscript dependency repositories"
			jcenter()
			maven { url "http://developer.marklogic.com/maven2/" }
	}
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'

    // This plugin allows you to create different environments
    // for your gradle deploy. Each environment is represented
    // by a gradle-${env}.properties file
    // See https://github.com/stevesaliman/gradle-properties-plugin
    // specify the env on the command line with:
    // gradle -PenvironmentName=x ...
    id 'net.saliman.properties' version '1.4.6'

    // This gradle plugin extends the ml-gradle plugin with
    // commands that make Data Hub do its magic
    id 'com.marklogic.ml-data-hub' version '5.5.0'
	id "com.marklogic.ml-development-tools" version "5.4.0"
}

repositories {
	// To use gradle in disconnected mode, you just need to set the 'disconnected' property. E.g. gradle compileJava -Pdisconnected

		println "Using online dependency repositories"
		jcenter()
		maven { url "http://developer.marklogic.com/maven2/" }
	
}


configurations {
    mlcp //example if you want to use mlcp. Delete otherwise
}


dependencies {
    // this allows you to write custom java code that depends
    // on the Data Hub Framework library
    // this allows you to write custom java code that depends
    // on the Data Hub library
    compile 'com.marklogic:marklogic-data-hub:5.5.0'

    mlcp "com.marklogic:mlcp:10.0.6.2"
    mlcp files("lib")
}


tasks.withType(com.marklogic.gradle.task.MlcpTask) {
    classpath = configurations.mlcp
    command = "IMPORT"
    port = Integer.parseInt(mlFinalPort)

}


task exportContent(type: com.marklogic.gradle.task.MlcpTask) {
  command = "EXPORT"
  output_file_path = "export/"
  collection_filter = "Contrat"
  output_type = "archive"
  copy_permissions = "true"
  copy_properties = "true"
  copy_quality = "true"
  copy_metadata = "true"
}

task importContent(type: com.marklogic.gradle.task.MlcpTask) {
  command = "IMPORT"
  input_file_path = "export/"
  input_file_type = "archive"
}