<export><workspace name="Workspace 1"><query name="3 default partition" focus="false" listorder="1" taborder="2" active="true" database="12727500845346638917" server="14923191952123773660" database-name="data-hub-FINAL" server-name="data-hub-FINAL" mode="javascript">'use strict';


const ts = require('/MarkLogic/tieredstorage');

declareUpdate();
ts.queryPartitionCreate(
   xdmp.database('data-hub-FINAL'),
   'hot',
   1,
   0,
   xdmp.host('macpro-4632.local')
);</query><query name="2 query assignment" focus="false" listorder="2" taborder="1" active="true" database="12727500845346638917" server="14923191952123773660" database-name="data-hub-FINAL" server-name="data-hub-FINAL" mode="javascript">'use strict';

const admin = require('/MarkLogic/admin');

const config = admin.getConfiguration();
const dbId = admin.databaseGetId(config, 'data-hub-FINAL');
const policy = admin.queryAssignmentPolicy(1);

let newConfig =  admin.databaseSetAssignmentPolicy(config, dbId, policy);
admin.saveConfiguration(newConfig)
// Returns the new configuration element -- use admin.saveConfiguration
// to save the changes to the configuration or pass the configuration
// to other Admin API functions to make other changes.</query><query name="4 rename forests" focus="false" listorder="3" taborder="3" active="true" database="12727500845346638917" server="14923191952123773660" database-name="data-hub-FINAL" server-name="data-hub-FINAL" mode="javascript">'use strict';

const admin = require('/MarkLogic/admin.xqy');
let nbOfForests = 3
let forestPrefix = "data-hub-FINAL-"
let newPrefix = "hot-000"
let errors = []
for (let index = 1; index &lt;= nbOfForests; ++index) {
  try{
 let forestId = admin.forestGetId(
   admin.getConfiguration(),
   forestPrefix + index
) 

let  config = admin.forestRename(admin.getConfiguration(), forestId, fn.replace(forestPrefix + index, forestPrefix, newPrefix))
admin.saveConfiguration(config)
  } catch (error) {
 errors.push(error)
  }

}
errors


</query><query name="5 set forests to partition" focus="false" listorder="4" taborder="4" active="true" database="12727500845346638917" server="14923191952123773660" database-name="data-hub-FINAL" server-name="data-hub-FINAL" mode="javascript">'use strict';

const admin = require('/MarkLogic/admin.xqy');
let config = admin.getConfiguration()
let nbOfForests = 3
let prefix = "hot-000"
let errors = []
for (let index = 1; index &lt;= nbOfForests; ++index) {
  const forestid = admin.forestGetId(config, prefix+index)
  config = admin.forestSetPartitionNumber(config, forestid, 1)
}


admin.saveConfiguration(config)
</query><query name="6 create tier1 partition" focus="false" listorder="5" taborder="5" active="true" database="12727500845346638917" server="14923191952123773660" database-name="data-hub-FINAL" server-name="data-hub-FINAL" mode="javascript">'use strict';


const ts = require('/MarkLogic/tieredstorage');

declareUpdate();
ts.queryPartitionCreate(
   xdmp.database('data-hub-FINAL'),
   'tier1',
   2,
   3,
   xdmp.host('macpro-4632.local'),
  "/Users/jbrunet/partition2"
);</query><query name="7 set query partition" focus="false" listorder="6" taborder="6" active="true" database="12727500845346638917" server="14923191952123773660" database-name="data-hub-FINAL" server-name="data-hub-FINAL" mode="javascript">'use strict';

// Sets the query for partition 1 in the Schemas database so that
// the documents with a LastModified date within last year will 
// go to partition 1. Other documents will go to partition 2.

const ts = require('/MarkLogic/tieredstorage');

declareUpdate();
ts.partitionSetQuery(
   xdmp.schemaDatabase(xdmp.database('data-hub-FINAL')),
  2,
  cts.jsonPropertyValueQuery("CdNatCtr","RC"));</query><query name="1. strict locking" focus="true" listorder="7" taborder="7" active="true" database="12727500845346638917" server="14923191952123773660" database-name="data-hub-FINAL" server-name="data-hub-FINAL" mode="javascript">'use strict';

  
  const admin = require('/MarkLogic/admin.xqy');
  let config = admin.getConfiguration()
  config = admin.databaseSetLocking(config, xdmp.database("data-hub-FINAL"),
        "strict")
  admin.saveConfiguration(config)

   //returns the new configuration element -- use admin.saveConfiguration
   //to save the changes to the configuration or pass the configuration
   //to other Admin API functions to make other changes.  </query></workspace></export>
